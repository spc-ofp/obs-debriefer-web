@model WebUI.Models.DebriefingHeaderViewModel
 
@Html.LabelFor(m => m.Version)
@Html.DropDownListFor(m => m.Version, new SelectList(Enum.GetValues(typeof(Spc.Ofp.Debriefer.Dal.Common.WorkbookVersion))), "Choose")
@Html.ValidationMessageFor(m => m.Version)
@Html.HiddenFor(m => m.PreviousVersion)
@Html.HiddenFor(m => m.PositiveActionResponse) 
  
@Html.LabelFor(m => m.GearCode)
@Html.DropDownListFor(m => m.GearCode, new SelectList(WebUI.Models.DebriefingHeaderViewModel.GearTypes, "Code", "Label"), "Choose") 
@Html.ValidationMessageFor(m => m.GearCode)
@Html.HiddenFor(m => m.PreviousGearCode)         
           
@* Use a hidden field for the staff code -- the full name field is for actual entry *@
@Html.LabelFor(m => m.ObserverCode)
@Html.HiddenFor(m => m.ObserverCode)
@Html.TextBoxFor(m => m.ObserverFullName, new { placeholder = "Enter the observer's name"})
<span class="help-inline">@Html.ValidationMessageFor(m => m.ObserverCode)</span>

@Html.LabelFor(m => m.DepartureDate, "Departure Date (dd-mm-yy HH:mm)")
@Html.TextBoxFor(m => m.DepartureDate, new { @class = "datetime", required = String.Empty })
<span class="help-inline">@Html.ValidationMessageFor(m => m.DepartureDate)</span>

@Html.LabelFor(m => m.DeparturePortId)
@Html.HiddenFor(m => m.DeparturePortId)
@Html.TextBoxFor(m => m.DeparturePort, new { placeholder = "Enter departure port name" })
<span class="help-inline">@Html.ValidationMessageFor(m => m.DeparturePortId)</span>

@Html.LabelFor(m => m.TripNumber)
@Html.TextBoxFor(m => m.TripNumber, new { required = String.Empty })
<span class="help-inline">@Html.ValidationMessageFor(m => m.TripNumber)</span>

@Html.LabelFor(m => m.ReturnDate, "Return Date (dd-mm-yy HH:mm)")
@Html.TextBoxFor(m => m.ReturnDate, new { @class = "datetime", required = String.Empty })
<span class="help-inline">@Html.ValidationMessageFor(m => m.ReturnDate)</span>

@Html.LabelFor(m => m.ReturnPortId)
@Html.HiddenFor(m => m.ReturnPortId)
@Html.TextBoxFor(m => m.ReturnPort, new { placeholder = "Enter return port name" })
<span class="help-inline">@Html.ValidationMessageFor(m => m.ReturnPortId)</span>

@Html.LabelFor(m => m.DebrieferCode)
@Html.HiddenFor(m => m.DebrieferCode)
@Html.TextBoxFor(m => m.DebrieferFullName, new { placeholder = "Enter the debriefer's name" })
<span class="help-inline">@Html.ValidationMessageFor(m => m.DebrieferCode)</span>

@Html.LabelFor(m => m.ProgramCode)
@Html.DropDownListFor(m => m.ProgramCode, new SelectList(Enum.GetValues(typeof(Spc.Ofp.Debriefer.Dal.Common.ObserverProgram))), "Choose")
<span class="help-inline">@Html.ValidationMessageFor(m => m.ProgramCode)</span>

@Html.LabelFor(m => m.StartTime, "Start Date (dd-mm-yy HH:mm)")
@Html.TextBoxFor(m => m.StartTime, new { @class = "datetime" })
<span class="help-inline">@Html.ValidationMessageFor(m => m.StartTime)</span>

@Html.LabelFor(m => m.EndTime, "End Date (dd-mm-yy HH:mm)")
@Html.TextBoxFor(m => m.EndTime, new { @class = "datetime" })
<span class="help-inline">@Html.ValidationMessageFor(m => m.EndTime)</span>

@Html.LabelFor(m => m.Comments)
@Html.TextAreaFor(m => m.Comments, new { rows = 4 })