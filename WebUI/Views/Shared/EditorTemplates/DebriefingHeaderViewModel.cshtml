@model WebUI.Models.DebriefingHeaderViewModel

@if (ViewData["flash"] != null)
{
    var alertLevel = ViewData["flash-level"] ?? "alert-error";
<div class="alert @alertLevel">
    @ViewData["flash"]
</div>
}

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true, "Save failed")
    <table style="width: auto;">
        <tbody>
            <tr>
                <td class="label">Observer:</td>
                <td>@Html.TextBoxFor(m => m.ObserverCode) @Html.ValidationMessageFor(m => m.ObserverCode)</td>
                <td class="label">Trip Number:</td>
                <td>@Html.TextBoxFor(m => m.TripNumber) @Html.ValidationMessageFor(m => m.TripNumber)</td>            
            </tr>
            <tr>           
                <td class="label">Vessel:</td>
                <td>
                    @Html.HiddenFor(m => m.VesselId) 
                    @Html.TextBoxFor(m => m.VesselName) 
                    @Html.ValidationMessageFor(m => m.VesselId)
                </td>
                <td class="label">Gear Code:</td>
                <td>
                    @Html.DropDownListFor(m => m.GearCode, new SelectList(WebUI.Models.DebriefingHeaderViewModel.GearTypes, "Code", "Label"), "Choose") 
                    @Html.ValidationMessageFor(m => m.GearCode)
                    @Html.HiddenFor(m => m.PreviousGearCode)
                </td>
            </tr>
            <tr>
                <td class="label">Program Code:</td>
                <td>
                    @Html.DropDownListFor(m => m.ProgramCode, new SelectList(Enum.GetValues(typeof(Spc.Ofp.Debriefer.Dal.Common.ObserverProgram))), "Choose")
                    @Html.ValidationMessageFor(m => m.ProgramCode)
                </td>
                <td class="label">Country Code:</td>
                <td>@Html.TextBoxFor(m => m.CountryCode)</td>
            </tr>
            <tr>
                <td class="label">Departure Date:</td>
                <td>@Html.TextBoxFor(m => m.DepartureDate, new { @class = "date" }) @Html.ValidationMessageFor(m => m.DepartureDate)</td>
                <td class="label">Departure Port:</td>
                <td>
                    @Html.HiddenFor(m => m.DeparturePortId)
                    @Html.TextBoxFor(m => m.DeparturePort) 
                    @Html.ValidationMessageFor(m => m.DeparturePortId)
                </td>            
            </tr>
            <tr>
                <td class="label">Return Date:</td>
                <td>@Html.TextBoxFor(m => m.ReturnDate, new { @class = "date" }) @Html.ValidationMessageFor(m => m.ReturnDate)</td>
                <td class="label">Return Port:</td>
                <td>
                    @Html.HiddenFor(m => m.ReturnPortId) 
                    @Html.TextBoxFor(m => m.ReturnPort) 
                    @Html.ValidationMessageFor(m => m.ReturnPortId)
                </td>            
            </tr>
            <tr>
                <td class="label">Start Date:</td>
                <td>@Html.TextBoxFor(m => m.StartTime, new { @class = "date" }) @Html.ValidationMessageFor(m => m.StartTime)</td>
                <td class="label">End Date:</td>
                <td>@Html.TextBoxFor(m => m.EndTime, new { @class = "date" })</td>            
            </tr>
            <tr>
                <td class="label">Debriefer:</td>
                <td>@Html.TextBoxFor(m => m.DebrieferCode) @Html.ValidationMessageFor(m => m.DebrieferCode)</td>
                <td class="label">Version:</td>
                <td>
                    @Html.DropDownListFor(m => m.Version, new SelectList(Enum.GetValues(typeof(Spc.Ofp.Debriefer.Dal.Common.WorkbookVersion))), "Choose")
                    @Html.ValidationMessageFor(m => m.Version)
                    @Html.HiddenFor(m => m.PreviousVersion)
                    @Html.HiddenFor(m => m.PositiveActionResponse)
                </td>            
            </tr>
            <tr>
                <td class="label">Comments:</td>
                <td colspan="3">@Html.TextAreaFor(m => m.Comments)</td>
            </tr>
        </tbody>
    </table>
    
    <p>
        <input type="submit" value="Save" />
        <input type="reset" value="Cancel" />
    </p>
}

<script>
    $(function () {
        $(".date").datetimepicker({ dateFormat: 'dd/mm/yy'});
    });

    $(function () {
        var autocompleteUrl = '@Url.Action("Find", "Vessel")';
        $("#VesselName").autocomplete({
            minLength: 2,
            source: autocompleteUrl,
            select: function (event, ui) {
                $("#VesselName").val(ui.item.label);
                $("#VesselId").val(ui.item.id);
                $("#GearCode").val(ui.item.GearType);
            }
        });
    });

    $(function () {
        var autocompleteUrl = '@Url.Action("Find", "Staff")';
        $("#ObserverCode").autocomplete({
            minLength: 2,
            source: autocompleteUrl,
        });
    });

    $(function () {
        var autocompleteUrl = '@Url.Action("Find", "Staff")';
        $("#DebrieferCode").autocomplete({
            minLength: 2,
            source: autocompleteUrl,
        });
    });

    $(function () {
        var autocompleteUrl = '@Url.Action("Find", "Port")';
        $("#DeparturePort").autocomplete({
            minLength: 2,
            source: autocompleteUrl,
            select: function (event, ui) {
                $("#DeparturePort").val(ui.item.label);
                $("#DeparturePortId").val(ui.item.id);
            }
        });
    });

    $(function () {
        var autocompleteUrl = '@Url.Action("Find", "Port")';
        $("#ReturnPort").autocomplete({
            minLength: 2,
            source: autocompleteUrl,
            select: function (event, ui) {
                $("#ReturnPort").val(ui.item.label);
                $("#ReturnPortId").val(ui.item.id);
            }
        });
    });
</script>